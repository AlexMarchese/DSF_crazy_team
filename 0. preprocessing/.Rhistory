print('Hey guys')
rm(list=ls())
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- read.csv("../Data/dataset.csv", encoding="UTF-8")
rm(list=ls())
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- read.csv("../Data/dataset.csv", encoding="UTF-8")
library(readr)
library(tidyr)
library(tidyverse)
library(magrittr)
library(plot3D)
library(plot3Drgl)
library(car)
library(caret)
library(dplyr)
summary(data)
table(data$colour)
table(data$country)
mode(data$colour)
mode(data$country)
mode(data$price)
data<-data %>%
group_by(`session.ID`)%>%
select(-c(1,2,3))
data_1<-data[,c(1,2,3,4,6,8,9,11)]
data_order<-data_1[,c(1,3)]
data_country<-data_1[,c(2,3)]
data_page1<-data_1[,c(4,3)]
data_col<-data_1[,c(5,3)]
data_model<-data_1[,c(6,3)]
data_price<-data_1[,c(7,3)]
data_page<-data_1[,c(8,3)]
data_price<-data_price %>%
summarise(across(price, mean))
data_country<-data_country%>%
count(country)
data_country %<>% select(-c(3))
data_model<-aggregate(data_model,
by = list(data_model$`session ID`),
FUN = mean)
data_model %<>% select(-c(1))
data_model %<>% mutate(data_model,ifelse(data_model$`model photography` < 1.5, 1, 2))
colnames(data_model)[3]<-'model_photo_mean'
mode <- function(codes){
which.max(tabulate(codes))
}
data_col <- data_col %>%
group_by(`session ID`) %>%
summarise(colour = mode(colour))
data_page_max<-aggregate(data_page,
by = list(data_page$`session ID`),
FUN = max)
data_page_max %<>% select(-c(1))
data_page_mean<-aggregate(data_page,
by = list(data_page$`session ID`),
FUN = mean)
data_page_mean %<>% select(-c(1))
rm(data_page)
data_order<-aggregate(data_order,
by = list(data_order$`session ID`),
FUN = max)
data_order %<>% select(-c(1))
data_page1 <- data_page1 %>%
group_by(`session ID`) %>%
summarise(mode_page1 = mode(`page 1 (main category)`))
middle<-left_join(data_col, data_country)
middle<-left_join(middle,data_model, by = 'session ID', 'session ID')
middle<-left_join(middle,data_order)
middle<-left_join(middle,data_page_max)
middle<-left_join(middle,data_page_mean, by = "session ID", "session ID")
colnames(middle)[7] <- "Page_max"
colnames(middle)[8] <- "Page_mean"
middle<-left_join(middle,data_page1)
middle<-left_join(middle,data_price)
data<-middle
rm(middle)
colnames(data)[6] <- "Number_of_clicks"
colnames(data)[4]<-'model_position'
library(ggplot2)
ggplot(data, aes(y= price, x= colour, col= colour))+geom_point()
View(data)
View(data)
View(data)
rm(list=ls())
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- read.csv("../Data/dataset.csv", encoding="UTF-8")
# data <- read_delim("../Data/dataset.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
library(readr)
library(tidyr)
library(tidyverse)
library(magrittr)
library(plot3D)
library(plot3Drgl)
library(car)
library(caret)
library(dplyr)
summary(data)
table(data$colour)
table(data$country)
mode(data$colour)
mode(data$country)
mode(data$price)
#install.packages("rockchalk")
#library(rockchalk)
#m1 = lm(mpg ~ poly(wt,2) + disp, data=mtcars)
#old.par = par(mfrow=c(1,2), mar=c(1,1,1,1))
#plotPlane(m1, "wt", "disp", pch=16, col=rgb(0,0,1,0.1), drawArrows=TRUE, alength=0,
#          acol="red", alty=1,alwd=1, theta=25, phi=0)
#plotPlane(m1, "wt", "disp", pch=16, col=rgb(0,0,1,0.1), drawArrows=TRUE, alength=0,
#          acol="red", alty=1,alwd=1, theta=35, phi=20)
#Ragruppare clienti per colore, in caso in cui il cliente (i) ha tutti colori diversi, assegnavo un valore uguale a 0
#prezzo = media dei prezzi visti
#teniamo la nazione
#model photography  & price 2  & page 1 & page 2 teniamo il valore pi? frequente e nel caso la frequenza et zero il valore sara 0
#page tenre il valore piu alto e il piu frequente
#order valore max
data<-data %>%
group_by(`session.ID`)%>%
select(-c(1,2,3))
data_1<-data[,c(1,2,3,4,6,8,9,11)]
data_order<-data_1[,c(1,3)]
data_country<-data_1[,c(2,3)]
data_page1<-data_1[,c(4,3)]
data_col<-data_1[,c(5,3)]
data_model<-data_1[,c(6,3)]
data_price<-data_1[,c(7,3)]
data_page<-data_1[,c(8,3)]
data_price<-data_price %>%
summarise(across(price, mean))
data_country<-data_country%>%
count(country)
data_country %<>% select(-c(3))
data_model<-aggregate(data_model,
by = list(data_model$`session ID`),
FUN = mean)
data_model %<>% select(-c(1))
data_model %<>% mutate(data_model,ifelse(data_model$`model photography` < 1.5, 1, 2))
colnames(data_model)[3]<-'model_photo_mean'
mode <- function(codes){
which.max(tabulate(codes))
}
data_col <- data_col %>%
group_by(`session ID`) %>%
summarise(colour = mode(colour))
data_page_max<-aggregate(data_page,
by = list(data_page$`session ID`),
FUN = max)
data_page_max %<>% select(-c(1))
data_page_mean<-aggregate(data_page,
by = list(data_page$`session ID`),
FUN = mean)
data_page_mean %<>% select(-c(1))
rm(data_page)
data_order<-aggregate(data_order,
by = list(data_order$`session ID`),
FUN = max)
data_order %<>% select(-c(1))
data_page1 <- data_page1 %>%
group_by(`session ID`) %>%
summarise(mode_page1 = mode(`page 1 (main category)`))
middle<-left_join(data_col, data_country)
middle<-left_join(middle,data_model, by = 'session ID', 'session ID')
middle<-left_join(middle,data_order)
middle<-left_join(middle,data_page_max)
middle<-left_join(middle,data_page_mean, by = "session ID", "session ID")
colnames(middle)[7] <- "Page_max"
colnames(middle)[8] <- "Page_mean"
middle<-left_join(middle,data_page1)
middle<-left_join(middle,data_price)
data<-middle
rm(middle)
colnames(data)[6] <- "Number_of_clicks"
colnames(data)[4]<-'model_position'
library(ggplot2)
ggplot(data, aes(y= price, x= colour, col= colour))+geom_point()
ggplot(data, aes(x=model_position, y= price))+geom_point()
View(data)
View(data_country)
rm(list=ls())
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- read.csv("../Data/dataset.csv", encoding="UTF-8")
library(readr)
library(tidyr)
library(tidyverse)
library(magrittr)
library(plot3D)
library(plot3Drgl)
library(car)
library(caret)
library(dplyr)
summary(data)
table(data$colour)
table(data$country)
mode(data$colour)
mode(data$country)
mode(data$price)
data<-data %>%
group_by(`session.ID`)%>%
select(-c(1,2,3))
View(data)
rm(list=ls())
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- read.csv("../Data/dataset.csv", encoding="UTF-8")
View(data)
library(readr)
library(tidyr)
library(tidyverse)
library(magrittr)
library(plot3D)
library(plot3Drgl)
library(car)
library(caret)
library(dplyr)
summary(data)
table(data$colour)
table(data$country)
mode(data$colour)
mode(data$country)
data$price
data<-data %>%
group_by(`session.ID`)%>%
select(-c(1,2,3))
data <- read.csv("../Data/dataset.csv", encoding="UTF-8")
data<-data %>%
group_by(`session.ID`)%>%
select(-c(1,2,3))
data_1<-data[,c(1,2,3,4,6,8,9,11)]
View(data_1)
data_order<-data_1[,c(1,3)]
View(data_order)
data_1<-data[,c(1,2,3,4,6,8,9,11)]
data_order<-data_1[,c(1,3)]
data_country<-data_1[,c(2,3)]
data_page1<-data_1[,c(4,3)]
data_col<-data_1[,c(5,3)]
data_model<-data_1[,c(6,3)]
data_price<-data_1[,c(7,3)]
data_page<-data_1[,c(8,3)]
View(data_price)
data_price<-data_price %>%
summarise(across(price, mean))
data_1<-data[,c(1,2,3,4,6,8,9,11)]
data_order<-data_1[,c(1,3)]
data_country<-data_1[,c(2,3)]
data_page1<-data_1[,c(4,3)]
data_col<-data_1[,c(5,3)]
data_model<-data_1[,c(6,3)]
data_price<-data_1[,c(7,3)]
data_page<-data_1[,c(8,3)]
data_page<-data_1[,c(8,3)]
data_price_n<-data_price %>%
summarise(across(price, mean))
View(data_price_n)
?summarise
?across
View(data_country)
data_country<-data_country%>%
count(country)
data_country %<>% select(-c(3))
data_model<-aggregate(data_model,
by = list(data_model$`session ID`),
FUN = mean)
data_model %<>% select(-c(1))
data_model %<>% mutate(data_model,ifelse(data_model$`model photography` < 1.5, 1, 2))
colnames(data_model)[3]<-'model_photo_mean'
mode <- function(codes){
which.max(tabulate(codes))
}
data_col <- data_col %>%
group_by(`session ID`) %>%
summarise(colour = mode(colour))
data_page_max<-aggregate(data_page,
by = list(data_page$`session ID`),
FUN = max)
data_page_max %<>% select(-c(1))
data_page_mean<-aggregate(data_page,
by = list(data_page$`session ID`),
FUN = mean)
data_page_mean %<>% select(-c(1))
rm(data_page)
data_order<-aggregate(data_order,
by = list(data_order$`session ID`),
FUN = max)
data_order %<>% select(-c(1))
View(data)
rm(list=ls())
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- read.csv("../Data/dataset.csv", encoding="UTF-8")
# data <- read_delim("../Data/dataset.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
library(readr)
library(tidyr)
library(tidyverse)
library(magrittr)
library(plot3D)
library(plot3Drgl)
library(car)
library(caret)
library(dplyr)
summary(data)
table(data$colour)
table(data$country)
mode(data$colour)
mode(data$country)
mode(data$price)
#install.packages("rockchalk")
#library(rockchalk)
#m1 = lm(mpg ~ poly(wt,2) + disp, data=mtcars)
#old.par = par(mfrow=c(1,2), mar=c(1,1,1,1))
#plotPlane(m1, "wt", "disp", pch=16, col=rgb(0,0,1,0.1), drawArrows=TRUE, alength=0,
#          acol="red", alty=1,alwd=1, theta=25, phi=0)
#plotPlane(m1, "wt", "disp", pch=16, col=rgb(0,0,1,0.1), drawArrows=TRUE, alength=0,
#          acol="red", alty=1,alwd=1, theta=35, phi=20)
#Ragruppare clienti per colore, in caso in cui il cliente (i) ha tutti colori diversi, assegnavo un valore uguale a 0
#prezzo = media dei prezzi visti
#teniamo la nazione
#model photography  & price 2  & page 1 & page 2 teniamo il valore pi? frequente e nel caso la frequenza et zero il valore sara 0
#page tenre il valore piu alto e il piu frequente
#order valore max
data<-data %>%
group_by(`session.ID`)%>%
select(-c(1,2,3))
data_1<-data[,c(1,2,3,4,6,8,9,11)]
data_order<-data_1[,c(1,3)]
data_country<-data_1[,c(2,3)]
data_page1<-data_1[,c(4,3)]
data_col<-data_1[,c(5,3)]
data_model<-data_1[,c(6,3)]
data_price<-data_1[,c(7,3)]
data_page<-data_1[,c(8,3)]
data_price_n<-data_price %>%
summarise(across(price, mean))
data_country<-data_country%>%
count(country)
data_country %<>% select(-c(3))
data_model<-aggregate(data_model,
by = list(data_model$`session ID`),
FUN = mean)
data_model %<>% select(-c(1))
data_model %<>% mutate(data_model,ifelse(data_model$`model photography` < 1.5, 1, 2))
colnames(data_model)[3]<-'model_photo_mean'
mode <- function(codes){
which.max(tabulate(codes))
}
data_col <- data_col %>%
group_by(`session ID`) %>%
summarise(colour = mode(colour))
data_page_max<-aggregate(data_page,
by = list(data_page$`session ID`),
FUN = max)
data_page_max %<>% select(-c(1))
data_page_mean<-aggregate(data_page,
by = list(data_page$`session ID`),
FUN = mean)
data_page_mean %<>% select(-c(1))
rm(data_page)
data_order<-aggregate(data_order,
by = list(data_order$`session ID`),
FUN = max)
data_order %<>% select(-c(1))
View(data)
library(tidyverse)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
DS <- read.csv("../Data/dataset.csv")
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
DS <- DS %>% select(-c(1, 2, 3, 8, 10, 13))
# DS_test$sessions <- DS %>% group_by(session.ID) %>% max(DS$order)
DS_conc <- aggregate(order ~ session.ID, DS, max)
DS_prmean <- aggregate(price ~ session.ID, DS, mean)
DS_remaind <- aggregate(. ~ session.ID, DS, Mode) %>% select(-c(order, price))
middle<-left_join(DS_conc, DS_prmean, by = "session.ID", "session.ID")
final_DS<-left_join(middle, DS_remaind, by = "session.ID", "session.ID")
names(final_DS)[2] <- "visits"
names(final_DS)[5] <- "category"
write.csv(final_DS, "../Data/clean_DS.csv")
View(DS)
names(DS)
library(tidyverse)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
DS <- read.delim("../Data/dataset.csv",sep = ";")
names(DS)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
DS <- DS %>% select(-c(1, 2, 3, 8, 10, 13))
# DS_test$sessions <- DS %>% group_by(session.ID) %>% max(DS$order)
DS_conc <- aggregate(order ~ session.ID, DS, max)
DS_prmean <- aggregate(price ~ session.ID, DS, mean)
DS_remaind <- aggregate(. ~ session.ID, DS, Mode) %>% select(-c(order, price))
middle<-left_join(DS_conc, DS_prmean, by = "session.ID", "session.ID")
final_DS<-left_join(middle, DS_remaind, by = "session.ID", "session.ID")
names(final_DS)[2] <- "visits"
names(final_DS)[5] <- "category"
write.csv(final_DS, "../Data/clean_DS.csv")
