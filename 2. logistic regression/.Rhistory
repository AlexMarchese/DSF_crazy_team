print('Hey guys')
library(tidyverse)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
DS <- read.delim("../Data/dataset.csv",sep = ";")
names(DS)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
DS <- DS %>% select(-c(1, 2, 3, 8, 10, 13))
# DS_test$sessions <- DS %>% group_by(session.ID) %>% max(DS$order)
DS_conc <- aggregate(order ~ session.ID, DS, max)
DS_prmean <- aggregate(price ~ session.ID, DS, mean)
DS_remaind <- aggregate(. ~ session.ID, DS, Mode) %>% select(-c(order, price))
middle<-left_join(DS_conc, DS_prmean, by = "session.ID", "session.ID")
final_DS<-left_join(middle, DS_remaind, by = "session.ID", "session.ID")
names(final_DS)[2] <- "visits"
names(final_DS)[5] <- "category"
View(final_DS)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
DS <- read.csv("../Data/clean_DS.csv")
View(DS)
library(readr)
data <- read_delim("../Data/dataset.csv",sep = ";")
library(tidyr)
library(tidyverse)
library(tidyverse)
library(magrittr)
library(plot3D)
library(plot3Drgl)
library(car)
library(caret)
library(dplyr)
summary(data)
table(data$colour)
table(data$country)
mode(data$colour)
mode(data$country)
mode(data$price)
data<-data %>%
group_by(`session ID`)%>%
select(-c(1,2,3))
data_1<-data[,c(1,2,3,4,6,8,9,11)]
data_order<-data_1[,c(1,3)]
library(readr)
data <- read_delim("../Data/dataset.csv", sep = ";")
data <- read_delim("../Data/dataset.csv")
View(data)
library(tidyr)
library(tidyverse)
library(magrittr)
library(plot3D)
library(plot3Drgl)
library(car)
library(caret)
library(dplyr)
summary(data)
table(data$colour)
table(data$country)
mode(data$colour)
mode(data$country)
mode(data$price)
data<-data %>%
group_by(`session ID`)%>%
select(-c(1,2,3))
data_1<-data[,c(1,2,3,4,6,8,9,11)]
data_order<-data_1[,c(1,3)]
data_country<-data_1[,c(2,3)]
data_page1<-data_1[,c(4,3)]
data_col<-data_1[,c(5,3)]
data_model<-data_1[,c(6,3)]
data_price<-data_1[,c(7,3)]
data_page<-data_1[,c(8,3)]
data_price<-data_price %>%
summarise(across(price, mean))
data_country<-data_country%>%
count(country)
data_country %<>% select(-c(3))
data_model<-aggregate(data_model,
by = list(data_model$`session ID`),
FUN = mean)
data_model %<>% select(-c(1))
data_model %<>% mutate(data_model,ifelse(data_model$`model photography` < 1.5, 1, 2))
colnames(data_model)[3]<-'model_photo_mean'
mode <- function(codes){
which.max(tabulate(codes))
}
data_col <- data_col %>%
group_by(`session ID`) %>%
summarise(colour = mode(colour))
data_page_max<-aggregate(data_page,
by = list(data_page$`session ID`),
FUN = max)
data_page_max %<>% select(-c(1))
data_page_mean<-aggregate(data_page,
by = list(data_page$`session ID`),
FUN = mean)
data_page_mean %<>% select(-c(1))
rm(data_page)
data_order<-aggregate(data_order,
by = list(data_order$`session ID`),
FUN = max)
data_order %<>% select(-c(1))
data_page1 <- data_page1 %>%
group_by(`session ID`) %>%
summarise(mode_page1 = mode(`page 1 (main category)`))
middle<-left_join(data_col, data_country)
middle<-left_join(middle,data_model, by = 'session ID', 'session ID')
middle<-left_join(middle,data_order)
middle<-left_join(middle,data_page_max)
middle<-left_join(middle,data_page_mean, by = "session ID", "session ID")
colnames(middle)[7] <- "Page_max"
colnames(middle)[8] <- "Page_mean"
middle<-left_join(middle,data_page1)
middle<-left_join(middle,data_price)
data<-middle
rm(middle)
colnames(data)[6] <- "Number_of_clicks"
colnames(data)[4]<-'model_position'
library(ggplot2)
ggplot(data, aes(y= price, x= colour, col= colour))+geom_point()
ggplot(data, aes(x=model_position, y= price))+geom_point()
data_mid <- data
data_mid<-data_mid%>%
group_by(country) %>%
summarise(price_mode = mode(price))
data_mid_2 <- data
data_mid_2<-aggregate(data_mid_2,
by = list(data_mid_2$country),
FUN = mean)
data_mid_2%<>% select(-c(1))
data_mid['price_mean']<-data_mid_2[,c(10)]
ggplot(data_mid) + geom_point(aes(x= price_mean, y= country), col = 'blue') + scale_y_continuous(
breaks = seq(1,47, by= 5)) + geom_point(aes(x=price_mode, y= country), col= 'red') + scale_x_continuous(
breaks = seq(min(data_mid$price_mean),max(data_mid$price_mean), by=10)) + xlab('Price') + ylab('Countries')
data<-data%>%
filter(data$price>=25 & data$price <=75)
#SPLITTING THE DATA AND TRAIN IT
set.seed(123)
training.samples <- data$price %>%
createDataPartition(p = 0.9, list = FALSE)
View(data)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
DS <- read.csv("../Data/clean_DS.csv")
DS_cl <- DS %>% select(-X)
View(DS_cl)
median(DS_cl$visits)
DS_cl <- DS_cl %>% mutate(Label = ifelse(visits >= 4, 1, 0))
View(DS_cl)
DS_cl <-DS_cl %>% select(-visits)
lapply(DS_cl, class)
modelAll = glm(Label ~ ., family = "binomial", data = DS_cl)
predict(modelAll, type = "response")
DS_cl
summary(DS_cl)
modelAll = glm(Label ~ ., family = "binomial", data = DS_cl)
predict(modelAll, type = "response")
D = DS_conv %>%
mutate(probAll = predict(modelAll, type = "response")) %>%
mutate(predAll50 = ifelse(probAll >=0.5, 1, 0))
modelAll = glm(Label ~ ., family = "binomial", data = DS_cl)
predict(modelAll, type = "response")
D = DS_cl %>%
mutate(probAll = predict(modelAll, type = "response")) %>%
mutate(predAll50 = ifelse(probAll >=0.5, 1, 0))
D = DS_cl %>%
mutate(probAll = predict(modelAll, type = "response")) %>%
mutate(predAll50 = ifelse(probAll >=0.4, 1, 0))
misClas_predAll50 = mean(D$predAll50 != D$Label)
falPos_predAll50 =
length(which(D$Label == 0 & D$predAll50 == 1))/
length(which(D$Label == 0))
falNeg_predAll50 =
length(which(D$Label == 1 & D$predAll50 == 0))/
length(which(D$Label == 1))
str(DS_cl)
dim(DS_cl)
modelA = glm(Label ~ price, catgory, country, family = "binomial", data = DS_cl)
modelA = glm(Label ~ c(price, catgory, country), family = "binomial", data = DS_cl)
modelA = glm(Label ~ c(price, category, country), family = "binomial", data = DS_cl)
modelA = glm(Label ~ c(price, country, category), family = "binomial", data = DS_cl)
library(tidyverse)
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
DS <- read.delim("../Data/dataset.csv",sep = ";")
names(DS)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
DS <- DS %>% select(-c(1, 2, 3, 8, 10, 13))
# DS_test$sessions <- DS %>% group_by(session.ID) %>% max(DS$order)
DS_conc <- aggregate(order ~ session.ID, DS, max)
DS_prmean <- aggregate(price ~ session.ID, DS, mean)
DS_remaind <- aggregate(. ~ session.ID, DS, Mode) %>% select(-c(order, price))
middle<-left_join(DS_conc, DS_prmean, by = "session.ID", "session.ID")
final_DS<-left_join(middle, DS_remaind, by = "session.ID", "session.ID")
names(final_DS)[2] <- "visits"
names(final_DS)[5] <- "category"
View(final_DS)
data_log <- DS[,c(5,7,9, 12)]
rm(list = ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
DS <- read.csv("../Data/clean_DS.csv")
data_log <- DS[,c(5,7,9, 12)]
data_log <- DS[,c(1, 3, 4, 6)]
View(data_log)
orig <- read.csv("../Data/dataset.csv")
View(orig)
data_log <- orig[,c(5, 7, 9, 12)]
orig <- read.delim("../Data/dataset.csv",sep = ";")
View(orig)
data_log <- orig[,c(5, 7, 9, 12)]
View(data_log)
